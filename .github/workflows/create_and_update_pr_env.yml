on:
  pull_request:
    types: [reopened, opened, synchronize, edited]

name: Create PR Env
jobs:
  create_env:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      BRANCH_NAME: ${{ github.head_ref }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install Dependencies
        run: yarn
      - run: node .github/actions/comment.js
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}

#      - name: Checkout
#        uses: actions/checkout@v1
#      - name: Install Dependencies
#        run: yarn
#      - name: Build Site
#        run: yarn build
#      - name: 'Terraform Init'
#        uses: hashicorp/terraform-github-actions@master
#        with:
#          tf_actions_version: 0.12.13
#          tf_actions_subcommand: 'init'
#          args: '-backend-config="key=${{ env.BRANCH_NAME }}.jkrsp.com.tfstate"'
#      - name: Terraform Plan
#        uses: hashicorp/terraform-github-actions@master
#        with:
#          tf_actions_version: 0.12.13
#          tf_actions_subcommand: 'plan'
#          args: '-var="is_temp_env=true" -var="env_prefix=${{ env.BRANCH_NAME }}." -out tf.plan'
#      - name: Terraform Apply
#        uses: hashicorp/terraform-github-actions@master
#        with:
#          tf_actions_version: 0.12.13
#          tf_actions_subcommand: 'apply'
#          args: 'tf.plan'
#      - name: Terraform Output
#        id: terraform
#        uses: hashicorp/terraform-github-actions@master
#        with:
#          tf_actions_version: 0.12.13
#          tf_actions_subcommand: 'output'
#          args: 'website'
#      - uses: octokit/request-action@v2.x
#        id: create_check_run
#        with:
#          route: POST /repos/:owner/:repo/issues/:issue_number/comments
#          repo: 'jkrsp'
#          owner: ${{ github.repository_owner }}
#          issue_number: ${{ github.event.pull_request.number }}
#          body: ${{ format('[Review website here]({0})', steps.terraform.outputs.tf_actions_output) }}
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
